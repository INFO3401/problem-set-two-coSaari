Part One 

1. Assume all of the directories below are valid directories. What would the following print out?
    cd /usrs/INFO3401/../homework/./problem1
     pwd

     This set of commands will make your current directory that of problem1. This will print, 
     /usrs/homework/problem1

2. What set of commands would you use to achieve the following:
    You've found yourself in a situation where your python program is 
    trying to parse files in a directory and is throwing an error. You 
    think it might be a permissions issue (i.e., you don't have permission 
    to access the files in that directory) and need to verify the permissions 
    on all files in that directory. The directory is in your home directory under 
    the "datasets/activedata" directory. Make no assumptions about what directory 
    you are currently working in. 

    cd ~
    cd datasets/activatedata
    ls -la     
    
        #(ls -la) this will allow you metadata for each file in that directory, including permissions 
        and hidden files


3. Briefly describe what the following set of commands would achieve. What process would happen and what 
    would be printed to the command line?

    cd ~
    mkdir ./problem_set_1
    touch submission.txt
    cd ..
    pwd


    Essentially, overall, you are creating a new empty directory in your home directory, then making a new 
    empty file to put in that new directory. You are then leaving that directory you just made to your home 
    directory and checking that you are in your home directory.

    cd ~ : send you to your home directory
    mkdir ./problem_set_1 : making new empty directoty, in your current home directory named problemset1
    touch submission.txt : creating a new empty file in your new directory named submission.txt
    cd .. : will exit your current directory you just made, and send you to your home directory
    pwd : is displaying your current directory, in this case your home directory




4. What set of commands would you use to achieve the following:
Copy a document called config.txt from your home directory to the root directory. Then, create a new 
directory in the root called preferences. Within preferences, copy prefs.txt from a matching directory 
called preferences in your home directory. Finally, determine that the start and end of the config.txt document 
in both root and home match.

    cd /
    cp ~/config1.txt .
    mkdir preferences
    cd preferences
    cp ~/preferences/prefs.txt .

    head -n 1 prefs.txt
    head -n 1 ~/preferences/prefs.txt

    tail -n 1 /preferences/prefs.txt
    tail -n 1 ~/preferences/prefs.txt







5. You have accidentally moved a file (~/Documents/datafile.csv) to your current directory rather than copying 
it. What command did you use to do that? What command should you have used to do that? What command might you use 
to undo it?



You used : mv ~/Documentsdatafile/datafile.csv current_dir
You should have used: cp ~/Documents/datafile.csv .
Undo: mv datafile.csv Documents








6. Download and unzip asciify-master.zip from Canvas. Then, navigate to the directory and use the command line to run 
asciify.py. What does this script do? Include a screenshot of your results. 

    The function imports an image and then replaces each pixel with specific ascii characters that 
    match that pixels overall color 
....................................................................................................
....................................................................................................
....................................................................................................
....................................................................................................
....................................................................................................
....................................................................................................
.....................................####:...............####.......................................
.....................................######...#######..######.......................................
.....................................#########################......................................
.....................................#########################......................................
.....................................########################.......................................
.....................................#########################......................................
.....................................#########################......................................
....................................###########################.....................................
....................................###########################.....................................
...................................#############################....................................
...................................########?+?#######%++########....................................
...................................######:::::::::::::::::+#####....................................
...................................#####:::..::::::::::..::+####....................................
...................................####:::....::::::::.?..::####....................................
...................................####:::..?.::::::::?.?.::####....................................
...................................+###:::+??;::::::::???.::@###....................................
....................................###:::.??.::::::::???.::###,....................................
....................................###:::.??.::::::::.?..::###.....................................
............................;%.......##@:::..::::?:::::..:::###.......#.............................
......................................##:::::::::::::::::::###......................................
.......................................###:::::::?::::::::###.......................................
........................................:####::::::::::@###.........................................
..................................###.......############............................................
..................................:,##.......@#######@..............................................
..................................:.##......###########.............................................
.....................................#:;....###########.............................................
......................................#@%#:S#####.#####@............................................
.......................................#######.##.######............................................
............................................##.##.######............................................
............................................##.##.######............................................
............................................##.##.######............................................
............................................##:##:######............................................
........................................::::##:##:######::::........................................
......................................::::::##:##:######::::::......................................
.....................................::::::###:##:###:###::::::.....................................
....................................::::::%*+::##:###:++#:::::::....................................
....................................,:::::::++##S::###++:::::::.....................................
.....................................:::::::++:++:++++++:::::::.....................................
.......................................:::::++:++:++++++:::::.......................................
..........................................::++:++:++++++::..........................................
..................................................,.................................................
....................................................................................................
....................................................................................................
....................................................................................................
....................................................................................................
....................................................................................................






7. Install the Delorean Python package. What command did you use? Then, from the command line, 
launch Python. Use it to execute the following commands: 

pip install Delorean 

Delorean(datetime=datetime.datetime(2020, 2, 11, 0, 51, 11, 378194), timezone='US/Eastern')




8. We can scrape webpage content or download collections of data files using wget. NASA, the 
USDA, and the NCBI all recommend using wget to download data from their repositories because 
it is faster and allows you to download data in bulk. We'll experiment with that on a smaller 
scale: use the command line to download data on the World Bank's budgetary expenditures at 
https://finances.worldbank.org/api/views/yu93-ayrw/rows.csv?accessType=DOWNLOAD (Links to an external site.)
 Links to an external site.. What command did you use? Make sure to include this file as part 
 of your submission. 

 wget https://finances.worldbank.org/api/views/yu93-ayrw/rows.csv?accessType=DOWNLOAD




9. The above budgetary data contains both individual items and aggregated totals across different 
sectors. Let's distill the data down to different aggregated totals. In this dataset, you can use 
the keyword "Total" to identify only those rows containing aggregate budget items. Use the command 
line to identify these rows. What command did you use? How many rows did this find (hint: the -c option 
can be helpful here)?

cat BudgExp.csv | grep Total -c
33



10. Now, print the lines containing the word "Total" to a file to "distilledExpenditures.csv". 
What command did you use? Include this file as part of your submission. 

cat BudgExp.csv | grep Total > distilledExpenditures.csv


